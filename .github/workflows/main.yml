# Test 2023-08-08 at 06:40:01

name: Test

on:
  push:
    paths:
      - '**.pm'
      - '**pushToGitHub.pl'
      - '**.yml'

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'main'

    - uses: actions/checkout@v3
      with:
        repository: philiprbrenan/DataTableText
        path: dtt

    - name: Cpan
      run:  sudo cpan install -T Data::Dump
    - name: Ubuntu update
      run:  sudo apt update

    - name: Verilog
      run:  sudo apt -y install iverilog

    - name: Verilog Version
      run:  iverilog -V

    - name: Emulator
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib lib/Zero/Emulator.pm

    - name: BubbleSort
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/bubbleSort.pl

    - name: InsertionSort
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/insertionSort.pl

    - name: QuickSort
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/quickSort.pl

    - name: QuickSort Parallel
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/quickSortParallel.pl

    - name: SelectionSort
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/selectionSort.pl

    - name: TestEmulator
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/testEmulator.pl

    - name: BTree
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib lib/Zero/BTree.pm

    - name: TestBTree - last as it is longest
      run:  perl -I$GITHUB_WORKSPACE/dtt/lib examples/testBTree.pl

  fpga:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'main'

    - uses: actions/checkout@v3
      with:
        repository: philiprbrenan/DataTableText
        path: dtt

    - name: Cpan
      run:  sudo cpan install -T Data::Dump
    - name: Ubuntu update
      run:  sudo apt update

    - name: Verilog
      run:  sudo apt -y install iverilog

    - name: Verilog Version
      run:  iverilog -V
    - name: verilog/fpga/tests/Add/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Add/fpga.tb verilog/fpga/tests/Add/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Array/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Array/fpga.tb verilog/fpga/tests/Array/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ArrayAdd/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ArrayAdd/fpga.tb verilog/fpga/tests/ArrayAdd/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ArrayCountGreaterIndex/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ArrayCountGreaterIndex/fpga.tb verilog/fpga/tests/ArrayCountGreaterIndex/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ArrayCountLess/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ArrayCountLess/fpga.tb verilog/fpga/tests/ArrayCountLess/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ArrayIndex/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ArrayIndex/fpga.tb verilog/fpga/tests/ArrayIndex/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Array_scans/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Array_scans/fpga.tb verilog/fpga/tests/Array_scans/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/basic/1/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/basic/1/fpga.tb verilog/fpga/tests/BTree/basic/1/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/basic/2/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/basic/2/fpga.tb verilog/fpga/tests/BTree/basic/2/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/in/1/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/in/1/fpga.tb verilog/fpga/tests/BTree/in/1/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/in/2/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/in/2/fpga.tb verilog/fpga/tests/BTree/in/2/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/in/3/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/in/3/fpga.tb verilog/fpga/tests/BTree/in/3/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/in/4/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/in/4/fpga.tb verilog/fpga/tests/BTree/in/4/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/BTree/insert/66/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/BTree/insert/66/fpga.tb verilog/fpga/tests/BTree/insert/66/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ForIn/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ForIn/fpga.tb verilog/fpga/tests/ForIn/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Free/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Free/fpga.tb verilog/fpga/tests/Free/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/In/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/In/fpga.tb verilog/fpga/tests/In/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/InSize/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/InSize/fpga.tb verilog/fpga/tests/InSize/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/JFalse/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/JFalse/fpga.tb verilog/fpga/tests/JFalse/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Jeq/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Jeq/fpga.tb verilog/fpga/tests/Jeq/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Jmp/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Jmp/fpga.tb verilog/fpga/tests/Jmp/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Mov/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Mov/fpga.tb verilog/fpga/tests/Mov/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Mov2/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Mov2/fpga.tb verilog/fpga/tests/Mov2/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/MoveLong_1/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/MoveLong_1/fpga.tb verilog/fpga/tests/MoveLong_1/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/MoveLong_2/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/MoveLong_2/fpga.tb verilog/fpga/tests/MoveLong_2/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Not/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Not/fpga.tb verilog/fpga/tests/Not/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Pop/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Pop/fpga.tb verilog/fpga/tests/Pop/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Push/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Push/fpga.tb verilog/fpga/tests/Push/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Push2/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Push2/fpga.tb verilog/fpga/tests/Push2/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ShiftLeft/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ShiftLeft/fpga.tb verilog/fpga/tests/ShiftLeft/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/ShiftRight/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/ShiftRight/fpga.tb verilog/fpga/tests/ShiftRight/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Shift_up/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Shift_up/fpga.tb verilog/fpga/tests/Shift_up/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Shift_up_2/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Shift_up_2/fpga.tb verilog/fpga/tests/Shift_up_2/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

    - name: verilog/fpga/tests/Subtract/fpga.sv
      if: ${{ always() }}
      run: |
        rm -f fpga z1.txt; iverilog -Iverilog/includes -g2012 -o fpga verilog/fpga/tests/Subtract/fpga.tb verilog/fpga/tests/Subtract/fpga.sv && timeout 1m ./fpga | tee z1.txt; grep -qv "FAILED" z1.txt

